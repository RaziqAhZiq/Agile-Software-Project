<!DOCTYPE html>
<html lang="en">

<head>
    <%- include ('base/head'); %>
    <title>Flight's Details Page</title>
    <link rel="stylesheet" href="/stylesheets/flight-style.css">
</head>

<body>
    <%- include ('base/navbar'); %>

    <div class="container mt-4" id="flightResults">
    
        <% if (error == 'false') { %>

            <% if (flightData.data.context.totalResults > 0) { %>
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div class="d-flex flex-column">
                        <p class="fs-4 mb-0">Flights from <span class="fw-bold"><%= flightData.data.itineraries[0].legs[0].origin.name %></span> to <span class="fw-bold"><%= flightData.data.itineraries[0].legs[0].destination.name %></span></p>
                    </div>
                    <button class="btn btn-outline-dark" onclick="redirectToWebpage('<%= valuesJSON %>')">Book on Website</button>
                </div>
            <% } %>
            
            <ul class="list-unstyled">
                <% if (flightData.data.context.totalResults > 0) { %>
                    <% flightData.data.itineraries.forEach((itinerary, index) => { %>
                        <div class="card mb-3">
                            <div class="card-header">
                                <div class="d-flex align-items-center justify-content-between">
                                    <div class="d-flex align-items-center">
                                        <img src="<%= itinerary.legs[0].carriers.marketing[0].logoUrl %>" alt="<%= itinerary.legs[0].carriers.marketing[0].name %> Logo" width="30" class="me-2">
                                        <h5 class="mb-0"><%= itinerary.legs[0].carriers.marketing[0].name %></h5>
                                    </div>
                                    <button class="btn btn-outline-dark" data-index="<%= index %>" data-itinerary='<%= JSON.stringify(itinerary) %>' onclick="addToDatabase(this)">Add to Bookings</button>
                                </div>
                            </div>
                            <div class="card-body d-flex flex-column justify-content-between">
                                <% itinerary.legs.forEach((leg, index) => { %>
                                    <div class="leg-item">
                                        <div class="leg-info">
                                            <div class="row">
                                                <div class="col text-center">
                                                    <span class="fs-5"><%= formatDate(leg.departure) %></span>
                                                    <span class="line flex-grow-1"></span>
                                                    <span class="fs-5"><%= formatDate(leg.arrival) %></span>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col text-center"></div>
                                                <div class="col text-center">
                                                    <div class="d-flex justify-content-center align-items-center h-100">
                                                        <span><%= convertToHoursAndMinutes(leg.durationInMinutes) %>, <%= leg.stopCount %> Stops</span>
                                                    </div>
                                                </div>
                                                <% if (index === 0) { %>
                                                    <div class="col text-end">
                                                        <h5>USD <%= itinerary.price.formatted %></h5>
                                                    </div>
                                                <% } else { %>
                                                    <div class="col text-end"></div>
                                                    <% } %>
                                            </div>
                                        </div>
                                    </div>
                                <% }); %>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <div class="d-flex flex-column">
                            <p class="fs-4 mb-0">Flights from <span class="fw-bold"><%= OriginAirportName %></span> to <span class="fw-bold"><%= DestinationAirportName %></span></p>
                        </div>
                    </div>
                    <div class="alert alert-warning">
                        No flight data available.
                    </div>
                <% } %>
            </ul>
            
        <% } else if (error == 'true') { %>
            <div class="d-flex justify-content-between align-items-center mb-2">
                <div class="d-flex flex-column">
                    <p class="fs-4 mb-0">Flights from <span class="fw-bold"><%= OriginAirportName %></span> to <span class="fw-bold"><%= DestinationAirportName %></span></p>
                </div>
            </div>
            <div class="alert alert-warning">
                No flight data available.
            </div>
        <% } %>

    </div>

    <div class="modal" id="modal">
        <div class="modal-content">
            <form id="addToItineraryForm">
                <div class="modal-header">
                    <h3 class="modal-title">Booking successful!</h3>
                    <button type="button" class="btn-close" onclick="closeModal()"></button>
                </div>
                <div class="modal-body">
                    <h4 class="h4-black">Would you like to add your booking into an itinerary?</h4>
                    <div class="itinerary-dropdown-div">
                        <input type="text" class="itinerary-dropdown" id="itineraryDropdown"
                            placeholder="Select itinerary..." required readonly />
                        <img src="/images/down-arrow.png" class="itinerary-dropdown-arrow" id="itineraryDropdownArrow">
                        <div class="dropdown-menu position-absolute w-100" id="itineraryDropdownOptions"></div>
                    </div>
                    <div class="create-itinerary-form" id="createItineraryForm"><br>
                        <div class="d-flex align-items-center">
                            <h4 class="h4-black">Trip Name</h4>
                        </div>
                        <input type="text" id="trip-name" class="form-control" placeholder="e.g. Trip to Bali" /><br>
                        <div class="d-flex align-items-center">
                            <h4 class="h4-black">Destination</h4>
                        </div>
                        <div class="input-group position-relative">
                            <input type="text" id="trip-destination" class="form-control" placeholder="Where to?" />
                            <button type="button" id="add-destination-button" class="btn btn-secondary rounded-end"
                                onclick="addDestination()">Add destination</button>
                            <div id="dropdown" class="dropdown-menu position-absolute w-100"></div>
                        </div>
                        <div id="selected-destinations" class="d-flex flex-wrap"></div><br>
                        <div class="d-flex align-items-center">
                            <h4 class="h4-black">Dates</h4>
                        </div>
                        <div class="input-group">
                            <span class="input-group-text">From:</span>
                            <input type="date" id="trip-from-date" class="form-control"
                                min="<%= new Date().toISOString().split('T')[0] %>" onchange="modalCheckDate()" />
                            <span class="input-group-text">To:</span>
                            <input type="date" id="trip-to-date" class="form-control"
                                min="<%= new Date().toISOString().split('T')[0] %>" onchange="modalCheckDate()" />
                        </div>
                        <div class="error-message" id="modalErrorMessage">
                            <img src="/images/error-icon.png" class="error-icon">
                            To date cannot be earlier than from date
                        </div>
                    </div>
                    <input type="hidden" id="bookingId" />
                    <input type="hidden" id="selectedItineraryId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" onclick="closeModal()">Skip</button>
                    <div id="addButtonContainer">
                        <button type="submit" class="btn btn-primary" id="addButton">Add</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    
    <%- include ('base/footer'); %>

    <% function formatDate(date) {
        const options = {
            year: 'numeric', month: '2-digit', day: '2-digit',
            hour: '2-digit', minute: '2-digit', second: '2-digit',
            hour12: false
        };
        const formattedDate = new Date(date).toLocaleString('en-US', options);
        return formattedDate.replace('24:', '00:');
    } %>
    

    <% function convertToHoursAndMinutes(minutes) {
        const hours = Math.floor(minutes / 60);
        const remainingMinutes = minutes % 60;
        if (hours === 0) {
            return `${remainingMinutes}m`;
        }
        if (remainingMinutes === 0) {
            return `${hours}h`;
        }
        return `${hours}h ${remainingMinutes}m`;
    } %>

</body>

</html>

<script>
    // function to redirect the user to webpage
    function redirectToWebpage(valuesJSON) {

        const values = JSON.parse(valuesJSON);
        const [flightType, originIATA, destinationIATA, dateInYYMMDD, dateFromInYYMMDD, dateToInYYMMDD, adult, cabinClass, children, infant] = values;

        if (flightType == "oneWay") {
            const queryParams = new URLSearchParams({
                adultsv2: adult,
                cabinclass: cabinClass,
                childrenv2: children,
                infantv2: infant
            });

            const url = `https://www.skyscanner.com/transport/flights/${originIATA}/${destinationIATA}/${dateInYYMMDD}/?${queryParams.toString()}`;
            window.open(url, '_blank');

        } else if (flightType == "roundTrip") {
            const queryParams = new URLSearchParams({
                adultsv2: adult,
                cabinclass: cabinClass,
                childrenv2: children,
                infantv2: infant
            });

            const url = `https://www.skyscanner.com/transport/flights/${originIATA}/${destinationIATA}/${dateFromInYYMMDD}/${dateToInYYMMDD}/?${queryParams.toString()}`;
            window.open(url, '_blank');
        }
        
    }

    function addToDatabase(buttonElement) {
        const itineraryIndex = buttonElement.getAttribute('data-index');
        const itineraryJSON = buttonElement.getAttribute('data-itinerary');
        const itinerary = JSON.parse(itineraryJSON);

        fetch('/flight/addToDatabase', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(itinerary),
        })
        .then(response => response.json())
        .then(data => {
            console.log(data);
            var modal = document.getElementById("modal");
            modal.style.display = "block";
            var bookingIdInput = document.getElementById("bookingId");
            bookingIdInput.value = data.bookingId;
            fetch("/itinerary/trip/destinations").then(response => response.json()).then(trips => {
                var selectedItineraryId = document.getElementById("selectedItineraryId");
                var itineraryDropdown = document.getElementById("itineraryDropdown");
                var itineraryDropdownOptions = document.getElementById(
                    "itineraryDropdownOptions");
                itineraryDropdownOptions.innerHTML = "";
                trips.forEach(trip => {
                    var optionDiv = document.createElement("div");
                    optionDiv.className = "dropdown-item";
                    optionDiv.innerText = trip.tripName;
                    optionDiv.onclick = function (e) {
                        selectedItineraryId.value = trip.id;
                        itineraryDropdown.value = trip.tripName;
                        itineraryDropdownOptions.style.display = "none";
                        createItineraryFormVisible();
                    }
                    itineraryDropdownOptions.appendChild(optionDiv);
                });
                var createOptionDiv = document.createElement("div");
                createOptionDiv.className = "dropdown-item";
                createOptionDiv.innerText = "Create new itinerary";
                createOptionDiv.onclick = function (e) {
                    selectedItineraryId.value = "";
                    itineraryDropdown.value = createOptionDiv.innerText;
                    itineraryDropdownOptions.style.display = "none";
                    createItineraryFormVisible();
                }
                itineraryDropdownOptions.appendChild(createOptionDiv);
            });
            
        })
        .catch(error => {
            console.error('Error:', error);
        });
        // window.alert("Flight added to bookings")
    }


    document.onclick = function (e) {
        // Show/hide itinerary dropdown
        var itineraryDropdown = document.getElementById("itineraryDropdown");
        var itineraryDropdownArrow = document.getElementById("itineraryDropdownArrow");
        var itineraryDropdownOptions = document.getElementById("itineraryDropdownOptions");
        if (e.target == itineraryDropdown || e.target == itineraryDropdownArrow) {
            if (itineraryDropdownOptions.style.display == "" || itineraryDropdownOptions.style.display == "none") {
                itineraryDropdownOptions.style.display = "block";
                itineraryDropdownArrow.src = "/images/up-arrow.png";
            } else {
                itineraryDropdownOptions.style.display = "none";
                itineraryDropdownArrow.src = "/images/down-arrow.png";
            }
        } else {
            itineraryDropdownOptions.style.display = "none";
            itineraryDropdownArrow.src = "/images/down-arrow.png";
        }
    }

    // Close modal
    function closeModal() {
        var modal = document.getElementById("modal");
        modal.style.display = "none";
    }

    // Show/hide create itinerary form in modal based on dropdown selection
    function createItineraryFormVisible() {
        var itineraryDropdown = document.getElementById("itineraryDropdown");
        var createItineraryForm = document.getElementById("createItineraryForm");
        var tripName = document.getElementById("trip-name");
        var tripFromDate = document.getElementById("trip-from-date");
        var tripToDate = document.getElementById("trip-to-date");
        if (itineraryDropdown.value == "Create new itinerary") {
            createItineraryForm.style.display = "block";
            tripName.required = true;
            tripFromDate.required = true;
            tripToDate.required = true;
        } else {
            createItineraryForm.style.display = "none";
            tripName.required = false;
            tripFromDate.required = false;
            tripToDate.required = false;
        }
    }

    var citiesAndCountries;
    var addedDestinations = [];

    // Destination suggestions
    $.getJSON("/data/airports.json", function (data) {
        citiesAndCountries = data.map(item => ({
            city: item.City,
            country: item.Country
        }));
        citiesAndCountries = citiesAndCountries.filter((value, index, self) => index == self.findIndex((v) => (v
            .city == value.city && v.country == value.country)));
    });
    $("#trip-destination").on("input", function () {
        const query = $(this).val().toLowerCase();
        const filteredOptions = citiesAndCountries.filter(item => item.city.toLowerCase().includes(query) ||
            item.country.toLowerCase().includes(query));
        updateDropdown(filteredOptions.slice(0, 5));
    });

    function updateDropdown(options) {
        var $dropdown = $("#dropdown");
        $dropdown.empty();
        if (options.length > 0) {
            $dropdown.show();
        } else {
            $dropdown.hide();
        }
        options.forEach(item => {
            var optionDiv = $("<div>").addClass("dropdown-item").text(`${item.city}, ${item.country}`);
            optionDiv.on("click", function () {
                $("#trip-destination").val(`${item.city}, ${item.country}`);
                addDestination();
                $dropdown.hide();
            });
            $dropdown.append(optionDiv);
        });
    }
    $(document).on("click", function () {
        $("#dropdown").hide();
    });

    // Add destination
    function addDestination() {
        if (addedDestinations.length >= 5) {
            alert("You can only add up to 5 destinations at one time.");
        }
        var selectedDestination = $("#trip-destination").val();
        if (selectedDestination && !addedDestinations.includes(selectedDestination)) {
            addedDestinations.push(selectedDestination);
            var destinationInput = $("<input>").attr("type", "text").attr("readonly", true).addClass("form-control")
                .val(selectedDestination);
            var deleteButton = $("<button>").text("Delete").addClass("btn btn-danger rounded-end").on("click",
                function () {
                    var index = addedDestinations.indexOf(selectedDestination);
                    addedDestinations.splice(index, 1);
                    $(this).closest(".input-group").remove();
                });
            var hiddenInput = $("<input>").attr("type", "hidden").attr("name", "destinations").val(selectedDestination);
            var inputGroup = $("<div>").addClass("input-group").css({
                "width": "auto",
                "margin-right": "10px",
                "margin-top": "10px"
            }).append(destinationInput, deleteButton, hiddenInput);
            $("#selected-destinations").append(inputGroup);
            $("#trip-destination").val("");
        }
    }

    // Prevent unwanted deletion of destination when enter key is pressed
    document.onkeydown = function (e) {
        if (e.key == "Enter" || e.keyCode == 13) {
            e.preventDefault();
        }
    }

    // Check that to date is not earlier than from date
    function modalCheckDate() {
        var fromDate = document.getElementById("trip-from-date");
        var toDate = document.getElementById("trip-to-date");
        var errorMessage = document.getElementById("modalErrorMessage");
        var addButtonContainer = document.getElementById("addButtonContainer");
        var addButton = document.getElementById("addButton");
        if (fromDate.value != "" && toDate.value != "" && toDate.value < fromDate.value) {
            fromDate.style.border = "1px solid #d9534f";
            toDate.style.border = "1px solid #d9534f";
            errorMessage.style.display = "block";
            addButtonContainer.className = "button-container-disabled";
            addButton.disabled = true;
        } else {
            fromDate.style.border = "1px solid #ccc";
            toDate.style.border = "1px solid #ccc";
            errorMessage.style.display = "none";
            addButtonContainer.className = "";
            addButton.disabled = false;
        }
    }

    // Add booking to itinerary
    $("#addToItineraryForm").on("submit", function (e) {
        e.preventDefault();
        var itineraryDropdown = document.getElementById("itineraryDropdown");
        var selectedItineraryId = document.getElementById("selectedItineraryId");
        var bookingIdInput = document.getElementById("bookingId");
        // If adding to existing itinerary
        if (itineraryDropdown.value != "Create new itinerary") {
            // Add itinerary ID to booking
            $.ajax({
                url: `/bookings/update/flights/${bookingIdInput.value}`,
                type: "PUT",
                data: JSON.stringify({
                    itineraryId: selectedItineraryId.value
                }),
                contentType: "application/json",
                success: function (response) {
                    // Add booking ID to itinerary
                    fetch("/itinerary/trip/destinations").then(response => response.json()).then(
                        trips => {
                            trips.forEach(trip => {
                                if (trip.id == selectedItineraryId.value) {
                                    if (trip.bookings.flights) {
                                        trip.bookings.flights.push(bookingIdInput.value);
                                    }
                                    else {
                                        trip.bookings.flights = [bookingIdInput.value];
                                    }
                                    $.ajax({
                                        url: `/itinerary/trip/<%= user.uid %>/destinations/${selectedItineraryId.value}`,
                                        type: "PUT",
                                        data: JSON.stringify(trip),
                                        contentType: "application/json",
                                        success: function (response) {
                                            alert(
                                                "Booking added to itinerary!"
                                                );
                                            window.location.href =
                                                `/itinerary/p?tripId=${selectedItineraryId.value}`;
                                        },
                                        error: function (error) {
                                            alert(
                                                "An error occurred while adding booking ID to itinerary."
                                                );
                                        }
                                    });
                                }
                            });
                        });
                },
                error: function (error) {
                    alert("An error occurred while adding itinerary ID to booking.");
                }
            });
        }
        // If adding to new itinerary
        else {
            if (addedDestinations.length == 0) {
                alert("Please add at least one destination.");
            } else {
                // Create new itinerary and add booking ID to itinerary
                $.post("/itinerary/trip/<%= user.uid %>/destinations", {
                    destinations: addedDestinations,
                    tripName: $("#trip-name").val(),
                    fromDate: $("#trip-from-date").val(),
                    toDate: $("#trip-to-date").val(),
                    bookings: {
                        flights: [bookingIdInput.value],
                        hotel: [],
                        airbnb: []
                    }
                }, function (response) {
                    // Add itinerary ID to booking
                    var itineraryId = response.itineraryId;
                    $.ajax({
                        url: `/bookings/update/flights/${bookingIdInput.value}`,
                        type: "PUT",
                        data: JSON.stringify({
                            itineraryId: itineraryId
                        }),
                        contentType: "application/json",
                        success: function (response) {
                            alert("Booking added to itinerary!");
                            window.location.href = `/itinerary/p?tripId=${itineraryId}`;
                        },
                        error: function (error) {
                            alert("An error occurred while adding to itinerary.");
                        }
                    });
                });
            }
        }
    });
    

</script>

<style>
    .line {
        display: inline-block;
        width: 150px; /* Adjust width as needed */
        height: 2px;
        background-color: black;
        margin: 0 10px;
        vertical-align: middle;
    }
</style>